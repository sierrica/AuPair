<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<configuration scan="true" debug="true">

	<!-- Default Conf -->
	<include resource="org/springframework/boot/logging/logback/defaults.xml"/>
	
	<!-- Properties -->​
	<springProperty scope="context" name="loggingFile" source="logging.file"/>
	
	<springProperty  name="nodeEnv" source="NODE_ENV"/>
	<springProperty  name="platform" source="PLATFORM"/>
	
	<springProperty  name="applicationName" source="spring.application.name"/>
	<springProperty  name="applicationVersion" source="spring.application.version"/>

	<springProperty  name="papertrailHost" source="papertrail.host"/>
	<springProperty  name="papertrailPort" source="papertrail.port"/>
	<springProperty  name="sentryDsn" source="sentry.dsn"/>
	<springProperty  name="bugsnagKey" source="bugsnag.key"/>
	<springProperty  name="rollbarKey" source="rollbar.key"/>

	
	<!-- Example for logging into the build folder of your project -->
	<property name="LOG_FILE" value="${loggingFile}"/>​

	<!-- Pattern for console and files -->
	<property name="CONSOLE_LOG_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>


	<!-- Appender to log to console -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
		<encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
			<charset>utf8</charset>
		</encoder>
	</appender>

	<!-- Appender to log to file -->​
	<appender name="flatfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        	<level>INFO</level>
    	</filter>
    	<file>${LOG_FILE}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
			<charset>utf8</charset>
		</encoder>
	</appender>
	​
	<!-- Appender to log to file in a JSON format -->
	<appender name="logstash" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        	<level>INFO</level>
    	</filter>
    	<file>${LOG_FILE}.json</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<timestamp>
					<timeZone>UTC</timeZone>
				</timestamp>
				<pattern>
					<pattern>
						{
						"severity": "%level",
						"service": "${springAppName:-}",
						"trace": "%X{X-B3-TraceId:-}",
						"span": "%X{X-B3-SpanId:-}",
						"parent": "%X{X-B3-ParentSpanId:-}",
						"exportable": "%X{X-Span-Export:-}",
						"pid": "${PID:-}",
						"thread": "%thread",
						"class": "%logger{40}",
						"rest": "%message"
						}
					</pattern>
				</pattern>
			</providers>
		</encoder>
	</appender>
	
	
	
	<!-- SAAS ERROR TRACING -->
	<!-- Sentry -->
    <appender name="sentry" class="com.getsentry.raven.logback.SentryAppender">
    <!-- <appender name="sentry" class="io.sentry.logback.SentryAppender"> -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <dsn>${sentryDsn}</dsn>
    	<release>${applicationVersion}</release>
    </appender>
	
	<!-- Rollbar -->
	<appender name="rollbar" class="com.tapstream.rollbar.RollbarAppender">
	 	<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        	<level>WARN</level>
    	</filter>
    	<apiKey>${rollbarKey}</apiKey>
    	<environment>${platform}-${nodeEnv}</environment>
	</appender>
	
	<!-- Bugsnag - No funciona con logback -->
	<appender name="bugsnag" class="com.codereligion.bugsnag.logback.Appender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        	<level>WARN</level>
    	</filter>
	    <apiKey>${bugsnagKey}</apiKey>
	    <sslEnabled>true</sslEnabled>
	</appender>
	


	<!-- SAAS LOGS -->
	<!-- Papertrail -->
	<appender name="papertrail" class="com.papertrailapp.logback.Syslog4jAppender">
	    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        	<level>WARN</level>
    	</filter>
    	<layout class="ch.qos.logback.classic.PatternLayout">
	      <pattern>%d{MMM dd HH:mm:ss} ${platform}-${nodeEnv} ${applicationName}: %-5level %logger{35}: %m%n%xEx</pattern>
	    </layout>
	    <syslogConfig class="org.productivity.java.syslog4j.impl.net.tcp.ssl.SSLTCPNetSyslogConfig">
	    <!-- <syslogConfig class="org.productivity.java.syslog4j.impl.net.udp.UDPNetSyslogConfig"> -->
	    <!-- <syslogConfig class="org.productivity.java.syslog4j.impl.net.tcp.TCPNetSyslogConfig"> Es necesario activarlo desde la web, por defecto esta deshabilitado -->
			<host>${papertrailHost}</host>
			<!-- Da problemas -->
			<!-- <port>${papertrailPort}</port> -->
			<port>21848</port>
			<sendLocalName>false</sendLocalName>
			<sendLocalTimestamp>false</sendLocalTimestamp>
			<maxMessageLength>102400</maxMessageLength>
		</syslogConfig>
	</appender>
	
	
	<!-- Main root -->
	<root level="INFO">
		<appender-ref ref="console"/>
		<appender-ref ref="flatfile"/>
		<appender-ref ref="logstash"/>
		<if condition='new String("${nodeEnv}").equals("production")'>
        	<then>
				<!-- <appender-ref ref="papertrail"/> -->
				<!-- <appender-ref ref="sentry"/> -->
				<!-- <appender-ref ref="rollbar"/> -->
				<!-- No funciona -->
				<!-- <appender-ref ref="bugsnag"/> -->
			</then>
		</if>
	</root>
</configuration>